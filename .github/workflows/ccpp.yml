name: Darling CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
        # git config --global url."https://github.com/".insteadOf "git@github.com:"
        git remote set-url origin https://github.com/darlinghq/darling.git
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: install
      run: sudo apt-get install cmake clang bison flex libfuse-dev libudev-dev pkg-config libc6-dev-i386 linux-headers-generic gcc-multilib libcairo2-dev libgl1-mesa-dev libtiff5-dev libfreetype6-dev git libelf-dev libxml2-dev libegl1-mesa-dev libfontconfig1-dev libbsd-dev libxrandr-dev libxcursor-dev ccache devscripts debhelper ninja-build tree
    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")
    - name: ccache cache files
      uses: actions/cache@v1.1.0
      with:
        path: /home/runner/.ccache
        key: ${ { matrix.config.name } }-ccache-${ { steps.ccache_cache_timestamp.outputs.timestamp } }
        restore-keys: |
          ${ { matrix.config.name } }-ccache-
    - name: ccache info
      run: ccache -s
    - name: make deb
      run: tools/makedeb
    - name: Move & compress DEBs
      run: mkdir dist && cp ../*.deb dist && tar -cJf dist.tar.xz dist
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: 'debs'
        path: dist.tar.xz
  build-src:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
        # git config --global url."https://github.com/".insteadOf "git@github.com:"
        git remote set-url origin https://github.com/darlinghq/darling.git
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: install
      run: sudo apt-get install cmake clang bison flex libfuse-dev libudev-dev pkg-config libc6-dev-i386 linux-headers-generic gcc-multilib libcairo2-dev libgl1-mesa-dev libtiff5-dev libfreetype6-dev git libelf-dev libxml2-dev libegl1-mesa-dev libfontconfig1-dev libbsd-dev libxrandr-dev libxcursor-dev ccache devscripts debhelper ninja-build tree
    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")
    - name: ccache cache files
      uses: actions/cache@v1.1.0
      with:
        path: /home/runner/.ccache
        key: ${ { matrix.config.name } }-ccache-${ { steps.ccache_cache_timestamp.outputs.timestamp } }
        restore-keys: |
          ${ { matrix.config.name } }-ccache-
    - name: ccache info
      run: ccache -s
    - name: make deb src
      run: tools/makedeb --dsc
    - name: Move & compress DEBs
      run: mkdir source && cp ../*~testing.* source && tar -cJf source.tar.xz source
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: 'source'
        path: source.tar.xz
